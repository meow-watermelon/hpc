---
- name: initialization stage
  hosts: "hpc"
  remote_user: "root"

  tasks:
  - name: set selinux permissive
    ansible.posix.selinux:
      policy: "targeted"
      state: "permissive"

  - name: disable firewall
    ansible.builtin.systemd_service:
      enabled: false
      name: "firewalld"
      state: "stopped"

  - name: set hostname
    ansible.builtin.command:
      cmd: "/usr/bin/nmcli general hostname {{ hostvars[inventory_hostname]['hostname'] }}"

  - name: copy hosts file
    ansible.builtin.copy:
      force: true
      src: "../configs/etc/hosts"
      dest: "/etc/hosts"
      owner: "root"
      group: "root"
      mode: 0644

  - name: create hpc group
    ansible.builtin.group:
      name: "hpc"
      gid: 9999
      state: "present"

  - name: add user ericlee
    ansible.builtin.user:
      create_home: true
      name: "ericlee"
      uid: 1000
      group: "hpc"
      groups: "wheel"
      password: "{{ 'homehpc' | password_hash('sha512', 'homehpcsalt') }}"
      state: "present"

- name: munge stage
  hosts: "farm"
  remote_user: "root"

  tasks:
  - name: install munge
    ansible.builtin.yum:
      name: "munge"
      state: "latest"

  - name: distribute munge key
    ansible.builtin.copy:
      force: true
      src: "../configs/etc/munge/munge.key"
      dest: "/etc/munge/munge.key"
      owner: "munge"
      group: "munge"
      mode: 0600
    notify: "restart munge"

  - name: enable and start munge daemon
    ansible.builtin.systemd_service:
      enabled: true
      name: "munge"
      state: "started"

  - name: verify munge service
    ansible.builtin.shell:
      cmd: "/usr/bin/munge -n | /usr/bin/unmunge"

  handlers:
    - name: restart munge
      ansible.builtin.service:
        name: "munge"
        state: "restarted"

- name: slurm stage
  hosts: "farm"
  remote_user: "root"

  tasks:
  - name: install mariadb-server on head node
    ansible.builtin.yum:
      name: "mariadb-server"
      state: "latest"
    when: inventory_hostname in groups['head']

  - name: enable and start mariadb daemon
    ansible.builtin.systemd_service:
      enabled: true
      name: "mariadb"
      state: "started"
    when: inventory_hostname in groups['head']

  - name: install slurmdbd on head node
    ansible.builtin.yum:
      name: "slurm-slurmdbd"
      state: "latest"
    when: inventory_hostname in groups['head']

  - name: install slurmctld on head node
    ansible.builtin.yum:
      name: "slurm-slurmctld"
      state: "latest"
    when: inventory_hostname in groups['head']

  - name: install slurmd on compute nodes
    ansible.builtin.yum:
      name: "slurm-slurmd"
      state: "latest"
    when: inventory_hostname in groups['compute']

  - name: copy slurm.conf file
    ansible.builtin.copy:
      force: true
      src: "../configs/etc/slurm/slurm.conf"
      dest: "/etc/slurm/slurm.conf"
      owner: "root"
      group: "root"
      mode: 0644
    notify:
      - "restart slurmctld"
      - "restart slurmd"

  - name: copy slurmdbd.conf file
    ansible.builtin.copy:
      force: true
      src: "../configs/etc/slurm/slurmdbd.conf"
      dest: "/etc/slurm/slurmdbd.conf"
      owner: "root"
      group: "root"
      mode: 0600
    when: inventory_hostname in groups['head']
    notify:
      - "restart slurmdbd"

  - name: enable and start slurmdbd daemon
    ansible.builtin.systemd_service:
      enabled: true
      name: "slurmdbd"
      state: "started"
    when: inventory_hostname in groups['head']

  - name: enable and start slurmctld daemon
    ansible.builtin.systemd_service:
      enabled: true
      name: "slurmctld"
      state: "started"
    when: inventory_hostname in groups['head']

  - name: enable and start slurmd daemon
    ansible.builtin.systemd_service:
      enabled: true
      name: "slurmd"
      state: "started"
    when: inventory_hostname in groups['compute']

  handlers:
    - name: "restart slurmctld"
      ansible.builtin.service:
        name: "slurmctld"
        state: "restarted"
      when: inventory_hostname in groups['head']
    - name: "restart slurmdbd"
      ansible.builtin.service:
        name: "slurmdbd"
        state: "restarted"
      when: inventory_hostname in groups['head']
    - name: "restart slurmd"
      ansible.builtin.service:
        name: "slurmd"
        state: "restarted"
      when: inventory_hostname in groups['compute']
